import { Component, Input, Output, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../services/chat.service";
import * as i2 from "@angular/common";
import * as i3 from "@angular/forms";
export class ChatRoomComponent {
    constructor(chatService) {
        this.chatService = chatService;
        this.room = '';
        this.username = 'default';
        this.message = '';
        this.messages = [];
        this.inRoom = false;
        this.leave = new EventEmitter();
    }
    ngOnInit() {
        if (this.room === 'Global Chat') {
            this.fetchGlobalMessages();
        }
        this.chatService.getMessages().subscribe((data) => {
            if (data.room === this.room) {
                this.messages.push(data);
            }
        });
    }
    fetchGlobalMessages() {
        this.chatService.getGlobalMessages().subscribe((messages) => {
            this.messages = messages.filter((msg) => msg.room === 'Global Chat');
        });
    }
    joinRoom() {
        this.chatService.joinRoom(this.room, this.username || 'default');
        this.inRoom = true;
    }
    leaveRoom() {
        console.log(`Leaving room: ${this.room}`);
        this.chatService.leaveRoom(this.room, this.username || 'default');
        this.inRoom = false;
        this.leave.emit();
    }
    sendMessage() {
        if (this.username != null) {
            this.chatService.sendMessageToRoom(this.room, this.message, this.username);
        }
        this.message = '';
    }
    generateRoomCode() {
        this.room = Math.random().toString(36).substring(2, 9);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ChatRoomComponent, deps: [{ token: i1.ChatService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: ChatRoomComponent, selector: "app-chat-room", inputs: { room: "room", username: "username" }, outputs: { leave: "leave" }, ngImport: i0, template: "<div class=\"chat-room\">\n  <h3 class=\"title is-5 has-background-primary has-text-white p-3\">\n    {{ room }}\n  </h3>\n  <div class=\"messages\">\n    <div class=\"message\" *ngFor=\"let msg of messages\">\n      <strong>{{ msg.username }}:</strong> {{ msg.message }}\n    </div>\n  </div>\n\n  <div class=\"field has-addons\">\n    <div class=\"control is-expanded\">\n      <input class=\"input\" [(ngModel)]=\"message\" placeholder=\"Type a message\" />\n    </div>\n    <div class=\"control\">\n      <button class=\"button is-info\" (click)=\"sendMessage()\">Send</button>\n    </div>\n  </div>\n\n  <button class=\"button is-danger mr-5\" (click)=\"leaveRoom()\">\n    Leave Room\n  </button>\n</div>\n", styles: [".chat-room{display:flex;flex-direction:column;justify-content:space-between;height:80vh;width:30vw;background-color:#fff;border:1px solid #ddd;padding:.75rem;overflow:hidden;position:fixed;bottom:20px;right:20px;box-shadow:0 2px 10px #0000001a;z-index:1000}.messages{overflow-y:auto;flex-grow:1}.message{margin-bottom:.5rem;padding:.5rem;background-color:#f5f5f5;border-radius:4px}\n"], dependencies: [{ kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ChatRoomComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-chat-room', template: "<div class=\"chat-room\">\n  <h3 class=\"title is-5 has-background-primary has-text-white p-3\">\n    {{ room }}\n  </h3>\n  <div class=\"messages\">\n    <div class=\"message\" *ngFor=\"let msg of messages\">\n      <strong>{{ msg.username }}:</strong> {{ msg.message }}\n    </div>\n  </div>\n\n  <div class=\"field has-addons\">\n    <div class=\"control is-expanded\">\n      <input class=\"input\" [(ngModel)]=\"message\" placeholder=\"Type a message\" />\n    </div>\n    <div class=\"control\">\n      <button class=\"button is-info\" (click)=\"sendMessage()\">Send</button>\n    </div>\n  </div>\n\n  <button class=\"button is-danger mr-5\" (click)=\"leaveRoom()\">\n    Leave Room\n  </button>\n</div>\n", styles: [".chat-room{display:flex;flex-direction:column;justify-content:space-between;height:80vh;width:30vw;background-color:#fff;border:1px solid #ddd;padding:.75rem;overflow:hidden;position:fixed;bottom:20px;right:20px;box-shadow:0 2px 10px #0000001a;z-index:1000}.messages{overflow-y:auto;flex-grow:1}.message{margin-bottom:.5rem;padding:.5rem;background-color:#f5f5f5;border-radius:4px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ChatService }]; }, propDecorators: { room: [{
                type: Input
            }], username: [{
                type: Input
            }], leave: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhdC1yb29tLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NoYXQtbGliL3NyYy9saWIvY2hhdC1yb29tL2NoYXQtcm9vbS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jaGF0LWxpYi9zcmMvbGliL2NoYXQtcm9vbS9jaGF0LXJvb20uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFRL0UsTUFBTSxPQUFPLGlCQUFpQjtJQVE1QixZQUFvQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQVBuQyxTQUFJLEdBQVcsRUFBRSxDQUFDO1FBQ2xCLGFBQVEsR0FBa0IsU0FBUyxDQUFDO1FBQzdDLFlBQU8sR0FBVyxFQUFFLENBQUM7UUFDckIsYUFBUSxHQUE0QyxFQUFFLENBQUM7UUFDdkQsV0FBTSxHQUFZLEtBQUssQ0FBQztRQUNkLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBUSxDQUFDO0lBRUksQ0FBQztJQUVoRCxRQUFRO1FBQ04sSUFBSSxJQUFJLENBQUMsSUFBSSxLQUFLLGFBQWEsRUFBRTtZQUMvQixJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztTQUM1QjtRQUNELElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBUyxFQUFFLEVBQUU7WUFDckQsSUFBSSxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxJQUFJLEVBQUU7Z0JBQzNCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQzFCO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsbUJBQW1CO1FBQ2pCLElBQUksQ0FBQyxXQUFXLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRTtZQUMxRCxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEtBQUssYUFBYSxDQUFDLENBQUM7UUFDdkUsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQVEsSUFBSSxTQUFTLENBQUMsQ0FBQztRQUNqRSxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztJQUNyQixDQUFDO0lBQ0QsU0FBUztRQUNQLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBQzFDLElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQVEsSUFBSSxTQUFTLENBQUMsQ0FBQztRQUNsRSxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksRUFBRTtZQUN6QixJQUFJLENBQUMsV0FBVyxDQUFDLGlCQUFpQixDQUNoQyxJQUFJLENBQUMsSUFBSSxFQUNULElBQUksQ0FBQyxPQUFPLEVBQ1osSUFBSSxDQUFDLFFBQVEsQ0FDZCxDQUFDO1NBQ0g7UUFDRCxJQUFJLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztJQUNwQixDQUFDO0lBQ0QsZ0JBQWdCO1FBQ2QsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDekQsQ0FBQzsrR0FsRFUsaUJBQWlCO21HQUFqQixpQkFBaUIsa0lDUjlCLDBzQkF1QkE7OzRGRGZhLGlCQUFpQjtrQkFMN0IsU0FBUzsrQkFDRSxlQUFlO2tHQUtoQixJQUFJO3NCQUFaLEtBQUs7Z0JBQ0csUUFBUTtzQkFBaEIsS0FBSztnQkFJSSxLQUFLO3NCQUFkLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDaGF0U2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL2NoYXQuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FwcC1jaGF0LXJvb20nLFxuICB0ZW1wbGF0ZVVybDogJy4vY2hhdC1yb29tLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vY2hhdC1yb29tLmNvbXBvbmVudC5jc3MnXSxcbn0pXG5leHBvcnQgY2xhc3MgQ2hhdFJvb21Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSByb29tOiBzdHJpbmcgPSAnJztcbiAgQElucHV0KCkgdXNlcm5hbWU6IHN0cmluZyB8IG51bGwgPSAnZGVmYXVsdCc7XG4gIG1lc3NhZ2U6IHN0cmluZyA9ICcnO1xuICBtZXNzYWdlczogeyB1c2VybmFtZTogc3RyaW5nOyBtZXNzYWdlOiBzdHJpbmcgfVtdID0gW107XG4gIGluUm9vbTogYm9vbGVhbiA9IGZhbHNlO1xuICBAT3V0cHV0KCkgbGVhdmUgPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjaGF0U2VydmljZTogQ2hhdFNlcnZpY2UpIHt9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMucm9vbSA9PT0gJ0dsb2JhbCBDaGF0Jykge1xuICAgICAgdGhpcy5mZXRjaEdsb2JhbE1lc3NhZ2VzKCk7XG4gICAgfVxuICAgIHRoaXMuY2hhdFNlcnZpY2UuZ2V0TWVzc2FnZXMoKS5zdWJzY3JpYmUoKGRhdGE6IGFueSkgPT4ge1xuICAgICAgaWYgKGRhdGEucm9vbSA9PT0gdGhpcy5yb29tKSB7XG4gICAgICAgIHRoaXMubWVzc2FnZXMucHVzaChkYXRhKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZldGNoR2xvYmFsTWVzc2FnZXMoKTogdm9pZCB7XG4gICAgdGhpcy5jaGF0U2VydmljZS5nZXRHbG9iYWxNZXNzYWdlcygpLnN1YnNjcmliZSgobWVzc2FnZXMpID0+IHtcbiAgICAgIHRoaXMubWVzc2FnZXMgPSBtZXNzYWdlcy5maWx0ZXIoKG1zZykgPT4gbXNnLnJvb20gPT09ICdHbG9iYWwgQ2hhdCcpO1xuICAgIH0pO1xuICB9XG5cbiAgam9pblJvb20oKTogdm9pZCB7XG4gICAgdGhpcy5jaGF0U2VydmljZS5qb2luUm9vbSh0aGlzLnJvb20sIHRoaXMudXNlcm5hbWUgfHwgJ2RlZmF1bHQnKTtcbiAgICB0aGlzLmluUm9vbSA9IHRydWU7XG4gIH1cbiAgbGVhdmVSb29tKCk6IHZvaWQge1xuICAgIGNvbnNvbGUubG9nKGBMZWF2aW5nIHJvb206ICR7dGhpcy5yb29tfWApO1xuICAgIHRoaXMuY2hhdFNlcnZpY2UubGVhdmVSb29tKHRoaXMucm9vbSwgdGhpcy51c2VybmFtZSB8fCAnZGVmYXVsdCcpO1xuICAgIHRoaXMuaW5Sb29tID0gZmFsc2U7XG4gICAgdGhpcy5sZWF2ZS5lbWl0KCk7XG4gIH1cblxuICBzZW5kTWVzc2FnZSgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy51c2VybmFtZSAhPSBudWxsKSB7XG4gICAgICB0aGlzLmNoYXRTZXJ2aWNlLnNlbmRNZXNzYWdlVG9Sb29tKFxuICAgICAgICB0aGlzLnJvb20sXG4gICAgICAgIHRoaXMubWVzc2FnZSxcbiAgICAgICAgdGhpcy51c2VybmFtZSxcbiAgICAgICk7XG4gICAgfVxuICAgIHRoaXMubWVzc2FnZSA9ICcnO1xuICB9XG4gIGdlbmVyYXRlUm9vbUNvZGUoKTogdm9pZCB7XG4gICAgdGhpcy5yb29tID0gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDIsIDkpO1xuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwiY2hhdC1yb29tXCI+XG4gIDxoMyBjbGFzcz1cInRpdGxlIGlzLTUgaGFzLWJhY2tncm91bmQtcHJpbWFyeSBoYXMtdGV4dC13aGl0ZSBwLTNcIj5cbiAgICB7eyByb29tIH19XG4gIDwvaDM+XG4gIDxkaXYgY2xhc3M9XCJtZXNzYWdlc1wiPlxuICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlXCIgKm5nRm9yPVwibGV0IG1zZyBvZiBtZXNzYWdlc1wiPlxuICAgICAgPHN0cm9uZz57eyBtc2cudXNlcm5hbWUgfX06PC9zdHJvbmc+IHt7IG1zZy5tZXNzYWdlIH19XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuXG4gIDxkaXYgY2xhc3M9XCJmaWVsZCBoYXMtYWRkb25zXCI+XG4gICAgPGRpdiBjbGFzcz1cImNvbnRyb2wgaXMtZXhwYW5kZWRcIj5cbiAgICAgIDxpbnB1dCBjbGFzcz1cImlucHV0XCIgWyhuZ01vZGVsKV09XCJtZXNzYWdlXCIgcGxhY2Vob2xkZXI9XCJUeXBlIGEgbWVzc2FnZVwiIC8+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImNvbnRyb2xcIj5cbiAgICAgIDxidXR0b24gY2xhc3M9XCJidXR0b24gaXMtaW5mb1wiIChjbGljayk9XCJzZW5kTWVzc2FnZSgpXCI+U2VuZDwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cblxuICA8YnV0dG9uIGNsYXNzPVwiYnV0dG9uIGlzLWRhbmdlciBtci01XCIgKGNsaWNrKT1cImxlYXZlUm9vbSgpXCI+XG4gICAgTGVhdmUgUm9vbVxuICA8L2J1dHRvbj5cbjwvZGl2PlxuIl19