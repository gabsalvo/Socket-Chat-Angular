import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../services/chat.service";
import * as i2 from "@angular/common";
import * as i3 from "@angular/forms";
import * as i4 from "../chat-room/chat-room.component";
export class ChatComponent {
    constructor(chatService) {
        this.chatService = chatService;
        this.activeRooms = [];
        this.roomCode = '';
        this.inRoom = false;
        this.globalRoomId = 'Global Chat';
        this.username = 'default';
        this.globalMessages = [];
    }
    joinGlobalChat() {
        this.roomCode = this.globalRoomId;
        this.joinRoom();
        this.fetchGlobalMessages();
    }
    fetchGlobalMessages() {
        if (this.roomCode === this.globalRoomId) {
            this.chatService.getGlobalMessages().subscribe((messages) => {
                this.globalMessages = messages; // Salva i messaggi nella proprietà
            });
        }
    }
    joinNamedRoom() {
        if (this.roomCode.trim()) {
            this.joinRoom();
        }
    }
    createRoom() {
        this.roomCode = this.chatService.generateRoomCode();
        console.log(this.roomCode);
        this.joinRoom();
    }
    joinRoom() {
        if (this.username != null) {
            this.chatService.joinRoom(this.roomCode, this.username);
            this.inRoom = true;
        }
    }
    leaveNamedRoom() {
        if (this.username != null) {
            this.chatService.leaveRoom(this.roomCode, this.username);
            this.roomCode = '';
            this.inRoom = false;
        }
    }
    ngOnInit() {
        console.log('Username in ChatComponent:', this.username);
        this.chatService.getActiveRoomsUpdates().subscribe((rooms) => {
            this.activeRooms = rooms;
        });
        this.fetchActiveRooms();
    }
    fetchActiveRooms() {
        this.chatService.getActiveRooms().subscribe((rooms) => {
            this.activeRooms = rooms;
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ChatComponent, deps: [{ token: i1.ChatService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: ChatComponent, selector: "app-chat", inputs: { username: "username" }, ngImport: i0, template: "<div class=\"chat-container\">\n  <div *ngIf=\"!inRoom\" class=\"box\">\n    <!-- Button to join the global chat room -->\n    <div class=\"field\">\n      <p class=\"control\">\n        <button\n          class=\"button is-primary is-fullwidth\"\n          (click)=\"joinGlobalChat()\"\n        >\n          Join Global Chat\n        </button>\n      </p>\n    </div>\n\n    <!-- Input and button to create/join a named room -->\n    <div class=\"field has-addons\">\n      <p class=\"control is-expanded\">\n        <input\n          class=\"input\"\n          type=\"text\"\n          [(ngModel)]=\"roomCode\"\n          placeholder=\"Enter room name\"\n        />\n      </p>\n      <p class=\"control\">\n        <button\n          class=\"button is-info\"\n          (click)=\"joinNamedRoom()\"\n          [disabled]=\"!roomCode.trim()\"\n        >\n          Create/Join Room\n        </button>\n      </p>\n    </div>\n    <div class=\"active-rooms\">\n      <h3 class=\"title is-4\">Available Rooms:</h3>\n      <ul>\n        <li *ngFor=\"let room of activeRooms\" class=\"room-list-item\">\n          {{ room }}\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <!-- ChatRoom component shown only if in a room -->\n  <app-chat-room\n    *ngIf=\"inRoom\"\n    [room]=\"roomCode\"\n    [username]=\"username\"\n    (leave)=\"leaveNamedRoom()\"\n  ></app-chat-room>\n</div>\n", styles: [".chat-container{position:fixed;right:20px;bottom:20px;width:300px;max-height:400px;border:1px solid #ddd;background-color:#fff;box-shadow:0 2px 10px #0003;z-index:1000;overflow:hidden}.chat-entry{padding:10px}.active-rooms{max-height:200px;overflow-y:auto}.room-list-item{margin-bottom:.5em}.button.is-fullwidth{margin-bottom:10px}\n"], dependencies: [{ kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i4.ChatRoomComponent, selector: "app-chat-room", inputs: ["room", "username"], outputs: ["leave"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ChatComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-chat', template: "<div class=\"chat-container\">\n  <div *ngIf=\"!inRoom\" class=\"box\">\n    <!-- Button to join the global chat room -->\n    <div class=\"field\">\n      <p class=\"control\">\n        <button\n          class=\"button is-primary is-fullwidth\"\n          (click)=\"joinGlobalChat()\"\n        >\n          Join Global Chat\n        </button>\n      </p>\n    </div>\n\n    <!-- Input and button to create/join a named room -->\n    <div class=\"field has-addons\">\n      <p class=\"control is-expanded\">\n        <input\n          class=\"input\"\n          type=\"text\"\n          [(ngModel)]=\"roomCode\"\n          placeholder=\"Enter room name\"\n        />\n      </p>\n      <p class=\"control\">\n        <button\n          class=\"button is-info\"\n          (click)=\"joinNamedRoom()\"\n          [disabled]=\"!roomCode.trim()\"\n        >\n          Create/Join Room\n        </button>\n      </p>\n    </div>\n    <div class=\"active-rooms\">\n      <h3 class=\"title is-4\">Available Rooms:</h3>\n      <ul>\n        <li *ngFor=\"let room of activeRooms\" class=\"room-list-item\">\n          {{ room }}\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <!-- ChatRoom component shown only if in a room -->\n  <app-chat-room\n    *ngIf=\"inRoom\"\n    [room]=\"roomCode\"\n    [username]=\"username\"\n    (leave)=\"leaveNamedRoom()\"\n  ></app-chat-room>\n</div>\n", styles: [".chat-container{position:fixed;right:20px;bottom:20px;width:300px;max-height:400px;border:1px solid #ddd;background-color:#fff;box-shadow:0 2px 10px #0003;z-index:1000;overflow:hidden}.chat-entry{padding:10px}.active-rooms{max-height:200px;overflow-y:auto}.room-list-item{margin-bottom:.5em}.button.is-fullwidth{margin-bottom:10px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ChatService }]; }, propDecorators: { username: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jaGF0LWxpYi9zcmMvbGliL2NoYXQvY2hhdC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jaGF0LWxpYi9zcmMvbGliL2NoYXQvY2hhdC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7O0FBUXpELE1BQU0sT0FBTyxhQUFhO0lBUXhCLFlBQW9CLFdBQXdCO1FBQXhCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBUDVDLGdCQUFXLEdBQWEsRUFBRSxDQUFDO1FBQzNCLGFBQVEsR0FBRyxFQUFFLENBQUM7UUFDZCxXQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ2YsaUJBQVksR0FBRyxhQUFhLENBQUM7UUFDcEIsYUFBUSxHQUFrQixTQUFTLENBQUM7UUFDN0MsbUJBQWMsR0FBNEMsRUFBRSxDQUFDO0lBRWQsQ0FBQztJQUVoRCxjQUFjO1FBQ1osSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQ2xDLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztJQUM3QixDQUFDO0lBRUQsbUJBQW1CO1FBQ2pCLElBQUksSUFBSSxDQUFDLFFBQVEsS0FBSyxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3ZDLElBQUksQ0FBQyxXQUFXLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRTtnQkFDMUQsSUFBSSxDQUFDLGNBQWMsR0FBRyxRQUFRLENBQUMsQ0FBQyxtQ0FBbUM7WUFDckUsQ0FBQyxDQUFDLENBQUM7U0FDSjtJQUNILENBQUM7SUFFRCxhQUFhO1FBQ1gsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxFQUFFO1lBQ3hCLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztTQUNqQjtJQUNILENBQUM7SUFFRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFDcEQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDM0IsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ2xCLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksRUFBRTtZQUN6QixJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUN4RCxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztTQUNwQjtJQUNILENBQUM7SUFFRCxjQUFjO1FBQ1osSUFBSSxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksRUFBRTtZQUN6QixJQUFJLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUN6RCxJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztZQUNuQixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztTQUNyQjtJQUNILENBQUM7SUFDRCxRQUFRO1FBQ04sT0FBTyxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDekQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFO1lBQzNELElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1FBQzNCLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7SUFDMUIsQ0FBQztJQUVELGdCQUFnQjtRQUNkLElBQUksQ0FBQyxXQUFXLENBQUMsY0FBYyxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7WUFDcEQsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7UUFDM0IsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDOytHQTlEVSxhQUFhO21HQUFiLGFBQWEsa0ZDUjFCLDYyQ0FvREE7OzRGRDVDYSxhQUFhO2tCQUx6QixTQUFTOytCQUNFLFVBQVU7a0dBU1gsUUFBUTtzQkFBaEIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2hhdFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9jaGF0LnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhcHAtY2hhdCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9jaGF0LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vY2hhdC5jb21wb25lbnQuY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIENoYXRDb21wb25lbnQge1xuICBhY3RpdmVSb29tczogc3RyaW5nW10gPSBbXTtcbiAgcm9vbUNvZGUgPSAnJztcbiAgaW5Sb29tID0gZmFsc2U7XG4gIGdsb2JhbFJvb21JZCA9ICdHbG9iYWwgQ2hhdCc7XG4gIEBJbnB1dCgpIHVzZXJuYW1lOiBzdHJpbmcgfCBudWxsID0gJ2RlZmF1bHQnO1xuICBnbG9iYWxNZXNzYWdlczogeyB1c2VybmFtZTogc3RyaW5nOyBtZXNzYWdlOiBzdHJpbmcgfVtdID0gW107XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjaGF0U2VydmljZTogQ2hhdFNlcnZpY2UpIHt9XG5cbiAgam9pbkdsb2JhbENoYXQoKTogdm9pZCB7XG4gICAgdGhpcy5yb29tQ29kZSA9IHRoaXMuZ2xvYmFsUm9vbUlkO1xuICAgIHRoaXMuam9pblJvb20oKTtcbiAgICB0aGlzLmZldGNoR2xvYmFsTWVzc2FnZXMoKTtcbiAgfVxuXG4gIGZldGNoR2xvYmFsTWVzc2FnZXMoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMucm9vbUNvZGUgPT09IHRoaXMuZ2xvYmFsUm9vbUlkKSB7XG4gICAgICB0aGlzLmNoYXRTZXJ2aWNlLmdldEdsb2JhbE1lc3NhZ2VzKCkuc3Vic2NyaWJlKChtZXNzYWdlcykgPT4ge1xuICAgICAgICB0aGlzLmdsb2JhbE1lc3NhZ2VzID0gbWVzc2FnZXM7IC8vIFNhbHZhIGkgbWVzc2FnZ2kgbmVsbGEgcHJvcHJpZXTDoFxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgam9pbk5hbWVkUm9vbSgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5yb29tQ29kZS50cmltKCkpIHtcbiAgICAgIHRoaXMuam9pblJvb20oKTtcbiAgICB9XG4gIH1cblxuICBjcmVhdGVSb29tKCk6IHZvaWQge1xuICAgIHRoaXMucm9vbUNvZGUgPSB0aGlzLmNoYXRTZXJ2aWNlLmdlbmVyYXRlUm9vbUNvZGUoKTtcbiAgICBjb25zb2xlLmxvZyh0aGlzLnJvb21Db2RlKTtcbiAgICB0aGlzLmpvaW5Sb29tKCk7XG4gIH1cblxuICBqb2luUm9vbSgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy51c2VybmFtZSAhPSBudWxsKSB7XG4gICAgICB0aGlzLmNoYXRTZXJ2aWNlLmpvaW5Sb29tKHRoaXMucm9vbUNvZGUsIHRoaXMudXNlcm5hbWUpO1xuICAgICAgdGhpcy5pblJvb20gPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIGxlYXZlTmFtZWRSb29tKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnVzZXJuYW1lICE9IG51bGwpIHtcbiAgICAgIHRoaXMuY2hhdFNlcnZpY2UubGVhdmVSb29tKHRoaXMucm9vbUNvZGUsIHRoaXMudXNlcm5hbWUpO1xuICAgICAgdGhpcy5yb29tQ29kZSA9ICcnO1xuICAgICAgdGhpcy5pblJvb20gPSBmYWxzZTtcbiAgICB9XG4gIH1cbiAgbmdPbkluaXQoKSB7XG4gICAgY29uc29sZS5sb2coJ1VzZXJuYW1lIGluIENoYXRDb21wb25lbnQ6JywgdGhpcy51c2VybmFtZSk7XG4gICAgdGhpcy5jaGF0U2VydmljZS5nZXRBY3RpdmVSb29tc1VwZGF0ZXMoKS5zdWJzY3JpYmUoKHJvb21zKSA9PiB7XG4gICAgICB0aGlzLmFjdGl2ZVJvb21zID0gcm9vbXM7XG4gICAgfSk7XG4gICAgdGhpcy5mZXRjaEFjdGl2ZVJvb21zKCk7XG4gIH1cblxuICBmZXRjaEFjdGl2ZVJvb21zKCk6IHZvaWQge1xuICAgIHRoaXMuY2hhdFNlcnZpY2UuZ2V0QWN0aXZlUm9vbXMoKS5zdWJzY3JpYmUoKHJvb21zKSA9PiB7XG4gICAgICB0aGlzLmFjdGl2ZVJvb21zID0gcm9vbXM7XG4gICAgfSk7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJjaGF0LWNvbnRhaW5lclwiPlxuICA8ZGl2ICpuZ0lmPVwiIWluUm9vbVwiIGNsYXNzPVwiYm94XCI+XG4gICAgPCEtLSBCdXR0b24gdG8gam9pbiB0aGUgZ2xvYmFsIGNoYXQgcm9vbSAtLT5cbiAgICA8ZGl2IGNsYXNzPVwiZmllbGRcIj5cbiAgICAgIDxwIGNsYXNzPVwiY29udHJvbFwiPlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgY2xhc3M9XCJidXR0b24gaXMtcHJpbWFyeSBpcy1mdWxsd2lkdGhcIlxuICAgICAgICAgIChjbGljayk9XCJqb2luR2xvYmFsQ2hhdCgpXCJcbiAgICAgICAgPlxuICAgICAgICAgIEpvaW4gR2xvYmFsIENoYXRcbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L3A+XG4gICAgPC9kaXY+XG5cbiAgICA8IS0tIElucHV0IGFuZCBidXR0b24gdG8gY3JlYXRlL2pvaW4gYSBuYW1lZCByb29tIC0tPlxuICAgIDxkaXYgY2xhc3M9XCJmaWVsZCBoYXMtYWRkb25zXCI+XG4gICAgICA8cCBjbGFzcz1cImNvbnRyb2wgaXMtZXhwYW5kZWRcIj5cbiAgICAgICAgPGlucHV0XG4gICAgICAgICAgY2xhc3M9XCJpbnB1dFwiXG4gICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgIFsobmdNb2RlbCldPVwicm9vbUNvZGVcIlxuICAgICAgICAgIHBsYWNlaG9sZGVyPVwiRW50ZXIgcm9vbSBuYW1lXCJcbiAgICAgICAgLz5cbiAgICAgIDwvcD5cbiAgICAgIDxwIGNsYXNzPVwiY29udHJvbFwiPlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgY2xhc3M9XCJidXR0b24gaXMtaW5mb1wiXG4gICAgICAgICAgKGNsaWNrKT1cImpvaW5OYW1lZFJvb20oKVwiXG4gICAgICAgICAgW2Rpc2FibGVkXT1cIiFyb29tQ29kZS50cmltKClcIlxuICAgICAgICA+XG4gICAgICAgICAgQ3JlYXRlL0pvaW4gUm9vbVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvcD5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiYWN0aXZlLXJvb21zXCI+XG4gICAgICA8aDMgY2xhc3M9XCJ0aXRsZSBpcy00XCI+QXZhaWxhYmxlIFJvb21zOjwvaDM+XG4gICAgICA8dWw+XG4gICAgICAgIDxsaSAqbmdGb3I9XCJsZXQgcm9vbSBvZiBhY3RpdmVSb29tc1wiIGNsYXNzPVwicm9vbS1saXN0LWl0ZW1cIj5cbiAgICAgICAgICB7eyByb29tIH19XG4gICAgICAgIDwvbGk+XG4gICAgICA8L3VsPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cblxuICA8IS0tIENoYXRSb29tIGNvbXBvbmVudCBzaG93biBvbmx5IGlmIGluIGEgcm9vbSAtLT5cbiAgPGFwcC1jaGF0LXJvb21cbiAgICAqbmdJZj1cImluUm9vbVwiXG4gICAgW3Jvb21dPVwicm9vbUNvZGVcIlxuICAgIFt1c2VybmFtZV09XCJ1c2VybmFtZVwiXG4gICAgKGxlYXZlKT1cImxlYXZlTmFtZWRSb29tKClcIlxuICA+PC9hcHAtY2hhdC1yb29tPlxuPC9kaXY+XG4iXX0=