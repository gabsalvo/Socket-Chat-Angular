{"version":3,"file":"gabriele-salvo-socket-chat-angular.mjs","sources":["../../../projects/chat-lib/src/lib/services/chat.service.ts","../../../projects/chat-lib/src/lib/chat-room/chat-room.component.ts","../../../projects/chat-lib/src/lib/chat-room/chat-room.component.html","../../../projects/chat-lib/src/lib/chat/chat.component.ts","../../../projects/chat-lib/src/lib/chat/chat.component.html","../../../projects/chat-lib/src/lib/wrapper/wrapper.component.ts","../../../projects/chat-lib/src/lib/wrapper/wrapper.component.html","../../../projects/chat-lib/src/lib/chat-lib.module.ts","../../../projects/chat-lib/src/public-api.ts","../../../projects/chat-lib/src/gabriele-salvo-socket-chat-angular.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { io, Socket } from 'socket.io-client';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChatService {\n  private socket: Socket;\n  private baseUrl = 'https://0e9b-93-35-217-254.ngrok-free.app';\n\n  constructor(private http: HttpClient) {\n    const room = localStorage.getItem('chatRoom');\n    this.socket = io('https://0e9b-93-35-217-254.ngrok-free.app');\n  }\n\n  public getGlobalMessages(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.baseUrl}/global-messages`);\n  }\n\n  public sendMessage(message: string): void {\n    this.socket.emit('sendMessage', message);\n  }\n\n  public getMessages(): Observable<{ username: string; message: string }> {\n    return new Observable((observer) => {\n      this.socket.on('message', (data) => {\n        observer.next(data);\n      });\n    });\n  }\n\n  public joinRoom(room: string, username?: string): void {\n    this.socket.emit('joinRoom', { room, username: username || 'default' });\n  }\n\n  public leaveRoom(room: string, username?: string): void {\n    this.socket.emit('leaveRoom', { room, username: username || 'default' });\n  }\n\n  public sendMessageToRoom(\n    room: string,\n    message: string,\n    username: string,\n  ): void {\n    this.socket.emit('sendMessage', { room, message, username });\n  }\n  public generateRoomCode(): string {\n    return Math.random().toString(36).substring(2, 9);\n  }\n\n  public getActiveRooms(): Observable<string[]> {\n    return this.http.get<string[]>('http://localhost:3000/active-rooms');\n  }\n\n  public getActiveRoomsUpdates(): Observable<string[]> {\n    return new Observable((observer) => {\n      this.socket.on('activeRooms', (rooms) => {\n        observer.next(rooms);\n      });\n    });\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ChatService } from '../services/chat.service';\n\n@Component({\n  selector: 'app-chat-room',\n  templateUrl: './chat-room.component.html',\n  styleUrls: ['./chat-room.component.css'],\n})\nexport class ChatRoomComponent implements OnInit {\n  @Input() room: string = '';\n  @Input() username: string | null = 'default';\n  message: string = '';\n  messages: { username: string; message: string }[] = [];\n  inRoom: boolean = false;\n  @Output() leave = new EventEmitter<void>();\n\n  constructor(private chatService: ChatService) {}\n\n  ngOnInit(): void {\n    if (this.room === 'Global Chat') {\n      this.fetchGlobalMessages();\n    }\n    this.chatService.getMessages().subscribe((data: any) => {\n      if (data.room === this.room) {\n        this.messages.push(data);\n      }\n    });\n  }\n\n  fetchGlobalMessages(): void {\n    this.chatService.getGlobalMessages().subscribe((messages) => {\n      this.messages = messages.filter((msg) => msg.room === 'Global Chat');\n    });\n  }\n\n  joinRoom(): void {\n    this.chatService.joinRoom(this.room, this.username || 'default');\n    this.inRoom = true;\n  }\n  leaveRoom(): void {\n    console.log(`Leaving room: ${this.room}`);\n    this.chatService.leaveRoom(this.room, this.username || 'default');\n    this.inRoom = false;\n    this.leave.emit();\n  }\n\n  sendMessage(): void {\n    if (this.username != null) {\n      this.chatService.sendMessageToRoom(\n        this.room,\n        this.message,\n        this.username,\n      );\n    }\n    this.message = '';\n  }\n  generateRoomCode(): void {\n    this.room = Math.random().toString(36).substring(2, 9);\n  }\n}\n","<div class=\"chat-room\">\n  <h3 class=\"title is-5 has-background-primary has-text-white p-3\">\n    {{ room }}\n  </h3>\n  <div class=\"messages\">\n    <div class=\"message\" *ngFor=\"let msg of messages\">\n      <strong>{{ msg.username }}:</strong> {{ msg.message }}\n    </div>\n  </div>\n\n  <div class=\"field has-addons\">\n    <div class=\"control is-expanded\">\n      <input class=\"input\" [(ngModel)]=\"message\" placeholder=\"Type a message\" />\n    </div>\n    <div class=\"control\">\n      <button class=\"button is-info\" (click)=\"sendMessage()\">Send</button>\n    </div>\n  </div>\n\n  <button class=\"button is-danger mr-5\" (click)=\"leaveRoom()\">\n    Leave Room\n  </button>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ChatService } from '../services/chat.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css'],\n})\nexport class ChatComponent {\n  activeRooms: string[] = [];\n  roomCode = '';\n  inRoom = false;\n  globalRoomId = 'Global Chat';\n  @Input() username: string | null = 'default';\n  globalMessages: { username: string; message: string }[] = [];\n\n  constructor(private chatService: ChatService) {}\n\n  joinGlobalChat(): void {\n    this.roomCode = this.globalRoomId;\n    this.joinRoom();\n    this.fetchGlobalMessages();\n  }\n\n  fetchGlobalMessages(): void {\n    if (this.roomCode === this.globalRoomId) {\n      this.chatService.getGlobalMessages().subscribe((messages) => {\n        this.globalMessages = messages; // Salva i messaggi nella proprietÃ \n      });\n    }\n  }\n\n  joinNamedRoom(): void {\n    if (this.roomCode.trim()) {\n      this.joinRoom();\n    }\n  }\n\n  createRoom(): void {\n    this.roomCode = this.chatService.generateRoomCode();\n    console.log(this.roomCode);\n    this.joinRoom();\n  }\n\n  joinRoom(): void {\n    if (this.username != null) {\n      this.chatService.joinRoom(this.roomCode, this.username);\n      this.inRoom = true;\n    }\n  }\n\n  leaveNamedRoom(): void {\n    if (this.username != null) {\n      this.chatService.leaveRoom(this.roomCode, this.username);\n      this.roomCode = '';\n      this.inRoom = false;\n    }\n  }\n  ngOnInit() {\n    console.log('Username in ChatComponent:', this.username);\n    this.chatService.getActiveRoomsUpdates().subscribe((rooms) => {\n      this.activeRooms = rooms;\n    });\n    this.fetchActiveRooms();\n  }\n\n  fetchActiveRooms(): void {\n    this.chatService.getActiveRooms().subscribe((rooms) => {\n      this.activeRooms = rooms;\n    });\n  }\n}\n","<div class=\"chat-container\">\n  <div *ngIf=\"!inRoom\" class=\"box\">\n    <!-- Button to join the global chat room -->\n    <div class=\"field\">\n      <p class=\"control\">\n        <button\n          class=\"button is-primary is-fullwidth\"\n          (click)=\"joinGlobalChat()\"\n        >\n          Join Global Chat\n        </button>\n      </p>\n    </div>\n\n    <!-- Input and button to create/join a named room -->\n    <div class=\"field has-addons\">\n      <p class=\"control is-expanded\">\n        <input\n          class=\"input\"\n          type=\"text\"\n          [(ngModel)]=\"roomCode\"\n          placeholder=\"Enter room name\"\n        />\n      </p>\n      <p class=\"control\">\n        <button\n          class=\"button is-info\"\n          (click)=\"joinNamedRoom()\"\n          [disabled]=\"!roomCode.trim()\"\n        >\n          Create/Join Room\n        </button>\n      </p>\n    </div>\n    <div class=\"active-rooms\">\n      <h3 class=\"title is-4\">Available Rooms:</h3>\n      <ul>\n        <li *ngFor=\"let room of activeRooms\" class=\"room-list-item\">\n          {{ room }}\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <!-- ChatRoom component shown only if in a room -->\n  <app-chat-room\n    *ngIf=\"inRoom\"\n    [room]=\"roomCode\"\n    [username]=\"username\"\n    (leave)=\"leaveNamedRoom()\"\n  ></app-chat-room>\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-wrapper',\n  templateUrl: './wrapper.component.html',\n  styleUrls: ['./wrapper.component.css'],\n})\nexport class WrapperComponent {\n  @Input() username: string | null = 'default';\n  chatOpen: boolean = false;\n\n  toggleChat(): void {\n    this.chatOpen = !this.chatOpen;\n  }\n}\n","<!-- chat-wrapper.component.html -->\n<div class=\"chat-wrapper\">\n  <div *ngIf=\"!chatOpen\" class=\"chat-icon\" (click)=\"toggleChat()\">\n    <i class=\"fa fa-comments custom\"></i>\n  </div>\n\n  <div *ngIf=\"chatOpen\">\n    <app-chat [username]=\"username\"></app-chat>\n    <button class=\"close-chat-btn\" (click)=\"toggleChat()\">\n      <i class=\"fa fa-times-circle\"></i>\n    </button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ChatComponent } from './chat/chat.component';\nimport { ChatRoomComponent } from './chat-room/chat-room.component';\nimport { ChatService } from './services/chat.service';\nimport { WrapperComponent } from './wrapper/wrapper.component';\n\n@NgModule({\n  declarations: [ChatComponent, ChatRoomComponent, WrapperComponent],\n  imports: [CommonModule, FormsModule, HttpClientModule],\n  exports: [ChatComponent, ChatRoomComponent, WrapperComponent],\n  providers: [ChatService],\n})\nexport class ChatLibModule {}\n","/*\n * Public API Surface of chat-lib\n */\n\nexport * from './lib/chat/chat.component';\nexport * from './lib/chat-room/chat-room.component';\nexport * from './lib/wrapper/wrapper.component';\nexport * from './lib/services/chat.service';\nexport * from './lib/chat-lib.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.ChatService","i4.ChatRoomComponent","i1","i2.ChatComponent"],"mappings":"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"}